#
# https://github.com/rusefi/rusefi/wiki/Dev-Quality-Control#hardware-continuous-integration
#

name: new HW CI (WIP)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  hardware-ci:
    strategy:
      # Let all builds finish even if one fails early
      fail-fast: false
      matrix:
        build-target: [f407-discovery]

        include:
          - build-target: f407-discovery
            runs-on: hw-ci-f407-discovery-default
            # see HwCiF4Discovery.java or https://github.com/rusefi/rusefi/wiki/Dev-Quality-Control#stm32f407g-disc1 for wiring documentation
            test-suite: com.rusefi.HwCiF4Discovery
            folder: config/boards/f407-discovery
            openocd-script: .github/workflows/openocd_ci_f4_discovery.cfg
            stlink-serial: H?u\x06geVQ2S\x08g

    runs-on: ${{matrix.runs-on}}

    steps:
    - uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '11'

    - uses: actions/checkout@v4

    - name: Checkout Submodules
      run: |
        misc/git_scripts/common_submodule_init.sh

    - name: Identify Agent
      run: |
        uname -a
        hostname

    - name: Acquire GCC
      uses: carlosperate/arm-none-eabi-gcc-action@v1
      with:
        release: '12.3.Rel1'

    # Make sure the compiler works
    - name: Test/Identify Compiler
      run: arm-none-eabi-gcc -v

    - name: Check for STLINK
      run: lsusb | grep -i "st-\?link"

    - name: Build Firmware
      run: .github/workflows/hw-ci/build_for_hw_ci.sh ${{matrix.folder}} ${{matrix.build-target}}

    - name: Show USB status
      run: |
        lsusb -vvv

    - name: OpenOCD wipe & flash STM32
      run: |
        (cat ${{matrix.openocd-script}}; echo "hla_serial ${{matrix.stlink-serial}}") \
          | .github/workflows/hw-ci/openocd_wipe_and_flash.sh

    - name: Upload build bin artifact
      uses: actions/upload-artifact@v4
      with:
        name: rusefi_hw-ci-${{matrix.build-target}}.bin
        path: ./firmware/build/rusefi*.bin

    # This both compiles and runs HW CI tests
    - name: Run Hardware CI
      run: .github/workflows/hw-ci/run_hw_ci.sh ${{matrix.test-suite}}

